step 1:
input directed graph information from input file, store edges in a list of lists
each element represent a link from from i to j
step 2:
create N*N adjacency matrix, initialize as all_of_zeros, then traverse the above the edge list and record in this matrix
duplicate edges will be counted
step 3:
compute transition probability matrix from adjacency matrix
a. If a row consists of all 0's, then replace each element by 1/N, N is the number of nodes. For all other rows, treat as following.
b. Divide each non-zero entry by the sum of its row elements. 
c. Muliply the resulting matrix by d.
d. Add (1-d)/N to every entry of the resulting matrix.
step 4:
For power method, multiply current probability vector by increasing powers of transition matrix until the product loods stable.
step 5:
Write the result into output file.

Note:
This program import numpy package to compute addition, multiplication and comparison whether converge.
